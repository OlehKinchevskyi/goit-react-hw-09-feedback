{"version":3,"sources":["components/Layout/Layout.js","components/Section/Section.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Layout","children","className","Section","title","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","slice","toLocaleUpperCase","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","positiveFeedbackPercentage","percentage","Math","round","countPositiveFeedbackPercentage","prevState","console","warn","ReactDOM","render","document","querySelector"],"mappings":"kQAMeA,G,MAHA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,qBAAKC,UAAU,SAAf,SAAyBD,MCUdE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOH,EAAV,EAAUA,SAAV,OACf,sBAAKC,UAAU,UAAf,UACE,6BAAKE,IACJH,M,MCiBWI,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OACI,6BACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,oBAAiBP,UAAU,aAA3B,SACE,wBAAQQ,KAAK,SAASC,QAAS,kBAAMJ,EAAgBE,IAArD,SACGA,EAAOG,MAAM,EAAG,GAAGC,oBAAsBJ,EAAOG,MAAM,MAFlDH,SCgBVK,EArBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,gCACK,+BACW,wCAAU,+BAAOJ,OACjB,2CAAa,+BAAOC,OACpB,uCAAS,+BAAOC,UAEpB,oBAAGf,UAAU,QAAb,oBAA6BgB,KAC7B,oBAAGhB,UAAU,QAAb,gCAAyCiB,EAAzC,WCEDC,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,8BACKA,KCGM,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBR,EADqB,KACfS,EADe,OAEED,mBAAS,GAFX,mBAErBP,EAFqB,KAEZS,EAFY,OAGNF,mBAAS,GAHH,mBAGrBN,EAHqB,KAGhBS,EAHgB,KAsCtBC,EAAqB,WACrB,OAAOZ,EAAOC,EAAUC,GAatBC,EAAQS,IACRC,EAPgC,WACtC,IAAMC,EAAaC,KAAKC,MAAM,IAAMhB,EAAOY,KAC3C,OAAOE,EAAa,EAAIA,EAAa,EAKFG,GAEnC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAS5B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEE,QAvBM,CAAC,OAAQ,UAAW,OAwB1BC,gBA3CI,SAACG,GACd,OAAQA,GACN,IAAK,OACHc,GAAQ,SAAAS,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHR,GAAW,SAAAQ,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHP,GAAO,SAAAO,GAAS,OAAIA,EAAY,KAChC,MAEF,QACEC,QAAQC,KAAR,wDAA2BzB,EAA3B,8GA8BC,cAAC,EAAD,CAASN,MAAM,aAAf,SACIc,EAAQ,EACR,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBS,IACnB,cAAC,EAAD,CAAcP,QAAQ,2BCxErCe,IAASC,OACL,cAACf,EAAD,IAASgB,SAASC,cAAc,Y","file":"static/js/main.13a37d06.chunk.js","sourcesContent":["import React from 'react';\nimport './Layout.css';\n\nconst Layout = ({ children }) =>\n    <div className=\"Layout\">{children}</div>;\n\nexport default Layout;","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n <div className=\"Section\">\n   <h2>{title}</h2>\n   {children}\n</div>\n );\n\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default Section;","import './Feedback.css';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n    return (\n        <ul> \n            {options.map(option => (\n                <li key={option} className=\"buttonList\">\n                  <button type=\"button\" onClick={() => onLeaveFeedback(option)}>\n                    {option.slice(0, 1).toLocaleUpperCase() + option.slice(1)}\n                </button>  \n            </li>\n     ))}\n        </ul>\n    );\n}\n        \nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n};\n\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n    <div>\n         <ul>\n                    <li>Good: <span>{good}</span></li>\n                    <li>Neutral: <span>{neutral}</span></li>\n                    <li>Bad: <span>{bad}</span></li>\n                </ul>\n                <p className=\"total\">Total: {total}</p>\n                <p className=\"total\">Positive feedback: {positivePercentage}%</p>\n</div>\n)\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n\n};\n\nexport default Statistics;","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n    <div>\n        {message}\n    </div>\n)\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;","import React, { useState } from 'react';\nimport Layout from './components/Layout/Layout';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/Feedback/Feedback';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n\n// export default class App extends Component {\n//   static propTypes = {};\n\n// static defaultProps = {};\n   \n//   state = {\n//      good: 0,\n//      neutral: 0,\n//      bad: 0\n//   }\n\n const update = (type) => {\n   switch (type) {\n     case 'good':\n       setGood(prevState => prevState + 1);\n       break;\n     \n     case 'neutral':\n       setNeutral(prevState => prevState + 1);\n       break;\n     \n     case 'bad':\n       setBad(prevState => prevState + 1);\n       break;\n     \n     default:\n       console.warn(`Тип поля - ${type} не обрабатывается.`)\n    }\n };\n\n  const options = ['good', 'neutral', 'bad'];\n\n  const countTotalFeedback = () => {\n        return good + neutral + bad;\n    }\n  \n//   countTotalFeedback = () => {\n//         return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n//     }\n\n  const countPositiveFeedbackPercentage = () => {\n    const percentage = Math.round(100 * good / countTotalFeedback());\n    return percentage > 0 ? percentage : 0;\n  }\n\n//   \n    const total = countTotalFeedback();\n    const positiveFeedbackPercentage = countPositiveFeedbackPercentage();\n\n    return (\n      <Layout>\n        <Section title=\"Please leave feedback\"> \n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={update} />\n        </Section>   \n        <Section title=\"Statistics\">   \n           {total > 0 ?\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positiveFeedbackPercentage} />\n             : <Notification message=\"No feedback given\" />\n          } \n          </Section>   \n      </Layout>\n    );\n  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.querySelector('#root'),\n);\n"],"sourceRoot":""}